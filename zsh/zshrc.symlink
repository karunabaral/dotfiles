export ZSH=$HOME/.dotfiles

# your project folder that we can `c [tab]` to
export PROJECTS=~/repos

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# all of our zsh files
typeset -U config_files
config_files=($ZSH/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load brews etc here
source "$ZSH/system/_path.zsh"

# load everything but the path and completion files
for file in ${${${config_files:#*/path.zsh}:#*/completion.zsh}:#system/_path.zsh}
do
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

zplug check || zplug install
zplug load

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

#
# My aliases
#

alias la='ls -flFGh --color=always'
alias ld='echo "ls -flFGhd --color=always test" && echo "" && ls -flFGhd --color=always'
alias f='echo "grep -IrisHn -C 3 --color=always test ./" && echo "" && grep -IrisHn -C 3 --color=always'

alias get='echo "curl -o \"#1.jpg\" http://www.url.com/images/[001-100].jpg \n" && curl -o'
alias ytd='echo "youtube-dl https://www.youtube.com/watch\?v=j-aIyueKNcY" && echo "Remember to put a \ before the ? when you paste the Youtube URL (for Mac,
Windows doesn’t need) \n" && youtube-dl'
alias ytda='echo "youtube-dl -x --audio-format mp3 https://www.youtube.com/watch\?v=j-aIyueKNcY" && echo "Remember to put a \ before the ? when you paste the Youtube URL (for Mac,
Windows doesn’t need) \n" && youtube-dl -x --audio-format mp3'

alias flushdns='dscacheutil -flushcache'
alias showlib='chflags nohidden ~/Library'
alias maintain='sudo periodic daily weekly monthly'

alias delete-merged-branches="!f() { git checkout --quiet develop && git branch --merged | grep --invert-match '\\*' | xargs -n 1 git branch --delete; git checkout --quiet @{-1}; }; f"
alias ss='http-server .'
alias arti='mv ~/.npmrc ~/.npmrc-bkp && echo "AD Username: " && read AD_LOGIN && echo "AD Password: " && read -s AD_PASSWORD && printf "cache-min=86400\ncache-max=604800\nprogress=false\n\nregistry=https://artifactory.foxsports.com.au/api/npm/npm-remote/\n" > ~/.npmrc  && curl -u "$AD_LOGIN:$AD_PASSWORD" https://artifactory.foxsports.com.au/api/npm/auth >> ~/.npmrc && curl -u "$AD_LOGIN:$AD_PASSWORD" https://artifactory.foxsports.com.au/api/npm/npm-fsa/auth/fsa >> ~/.npmrc && unset -v AD_LOGIN AD_PASSWORD'
alias runtests='echo "grunt build-tests && testem ci -f test/testem-ci.json -R tap"; grunt build-tests && testem ci -f test/testem-ci.json -R tap'

# shortcuts

alias grw='echo "grunt watcher" && echo "" && grunt watcher'
alias grd='echo "grunt default" && echo "" && grunt default'
alias grdw='echo "grunt default && grunt watcher" && echo "" && grunt default && echo "\n\n\n\n\n\n\n\n\n\n----- RUNNING WATCHER NOW ------\n\n\n\n\n\n\n\n\n\n" && grunt watcher'
alias nrb='echo "npm run build" && echo "" && npm run build'
alias nrbw='echo "npm run build && npm run watch" && echo "" && npm run build && echo "\n\n\n\n\n\n\n\n\n\n----- RUNNING WATCH NOW ------\n\n\n\n\n\n\n\n\n\n" && npm run watch'
alias nrw='echo "npm run watch" && echo "" && npm run watch'
alias getperms='echo "stat -f \"%OLp\"" && echo "" && stat -f "%OLp"'

[[ -s "$HOME/.avn/bin/avn.sh" ]] && source "$HOME/.avn/bin/avn.sh" # load avn
