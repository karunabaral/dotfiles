;; After running goku, check instructions to tweak the json file at the bottom of this file
{
    :devices {:applekeyboard [{:vendor_id 1452 :product_id 835}]}
    :profiles {:default {:default true
        :alone   1000 ; hold for .. ms to register single tap
        :held    50 ; to_if_held_down, a -> b if held down (like hold-tap) I don't use it anyway
        :delay   0 ; time after which the key press is delayed
        :sim     50}} ; keys need to be pressed within this threshold to be considered simultaneous (this not only affects combos, but also layer taps, so make it higher than you would for QMK combos)
    :simlayers {
        :nav-layer {:key :q}
        :sym-layer {:key :w}
        :kb-layer {:key :z}
        :num-layer {:key :x}
        :fnc-layer {:key :open_bracket}
    }
    :main [
        {
            :des "combos"
            :rules [
                [[:o :p] :delete_or_backspace] ;; qwerty still
                ;; [[:i :o] :delete_forward :modi {:mandatory [:left_shift]}] ;; doesn't work
                [[:comma :period] :tab]
                [[:comma :right_shift] :escape]
                [[:period :slash] :return_or_enter]
                [[:c :v] :grave_accent_and_tilde]
                ;; [[:!Sc :!Sv] :!Sgrave_accent_and_tilde] ;; breaks
                [[:v :comma] :caps_lock]
            ]
        }
        {
            :des "nav layer"
            :rules [
                [:w :left_shift :nav-layer]
                [:e :volume_increment :nav-layer]
                [:r :!Cg :nav-layer]
                [:#St [:!CSf :#Sf4] :nav-layer]
                [:##u :##f :nav-layer]
                [:#Si :!O#Sleft_arrow :nav-layer]
                [:#So :#Spage_up :nav-layer]
                [:#Sp :#Spage_down :nav-layer]
                [:#Sopen_bracket :!O#Sright_arrow :nav-layer]
                ;; middle row
                ;; [:s :scan_previous_track :nav-layer] ;; breaks goku?
                [:d :volume_decrement :nav-layer]
                [:f :play_or_pause :nav-layer]
                ;; [:g :scan_next_track :nav-layer] ;; breaks goku?
                [:j :!S6 :nav-layer]
                [:##k :##left_arrow :nav-layer]
                [:##l :##up_arrow :nav-layer]
                [:##semicolon :##down_arrow :nav-layer]
                [:##quote :##right_arrow :nav-layer]
                ;; bottom row
                [:x :!CSdelete_or_backspace :nav-layer]
                [:##c :!CTq :nav-layer]
                [:##v :s :nav-layer]
                [:##b :!CSm :nav-layer]
                [:m :!S4 :nav-layer]
                [:#Scomma :!C#Sleft_arrow :nav-layer]
                [:#Speriod :!C#Sup_arrow :nav-layer]
                [:#Sslash :!C#Sdown_arrow :nav-layer]
                [:#Sright_shift :!C#Sright_arrow :nav-layer]
            ]
        }
        {
            :des "sym layer"
            :rules [
                [:e :left_shift :sym-layer]
                [:r :!OSl :sym-layer]
                [:t :!OTl :sym-layer]
                [:##u :##backslash :sym-layer]
                [:##i :##quote :sym-layer]
                [:#COTo :#COTopen_bracket :sym-layer]
                [:!S#COTo :#COTclose_bracket :sym-layer]
                [:#Sp :!O#Shyphen :sym-layer]
                [:##open_bracket :##semicolon :sym-layer]
                ;; middle row
                [:d [:h :t :t :p :s :!Ssemicolon :slash :slash] :sym-layer]
                [:f :!Ck :sym-layer]
                [:g :keypad_plus :sym-layer]
                [:#COTj :#COTdelete_or_backspace :sym-layer]
                [:!S#COTj :#COTdelete_forward :sym-layer]
                [:#COTk :!S9 :sym-layer]
                [:!S#COTk :!S#COT0 :sym-layer]
                [:#COTl :!S#COTopen_bracket :sym-layer]
                [:!S#COTl :!S#COTclose_bracket :sym-layer]
                [:##semicolon :##hyphen :sym-layer]
                [:##quote :##equal_sign :sym-layer]
                ;; bottom row
                [:m [:!S4 :!Sopen_bracket :!Sclose_bracket :left_arrow] :sym-layer]
                [:comma :!S1 :sym-layer]
                [:period :!Scomma :sym-layer]
                [:slash :!Speriod :sym-layer]
                [:##right_shift :##slash :sym-layer]
            ]
        }
        {
            :des "num layer"
            :rules [
                [:##r :##open_bracket :num-layer]
                [:##t :##close_bracket :num-layer]
                [:##u :##hyphen :num-layer]
                [:##i :##7 :num-layer]
                [:##o :##8 :num-layer]
                [:##p :##9 :num-layer]
                [:##open_bracket :##keypad_plus :num-layer]
                ;; middle row
                [:##d :##equal_sign :num-layer]
                [:##f :##up_arrow :num-layer]
                [:##g :##comma :num-layer]
                [:##j :##slash :num-layer]
                [:##k :##4 :num-layer]
                [:##l :##5 :num-layer]
                [:##semicolon :##6 :num-layer]
                [:##quote :##0 :num-layer]
                ;; bottom row
                [:##c :##left_shift :num-layer]
                [:##v :##down_arrow :num-layer]
                [:##b [:escape :!Ssemicolon :b] :num-layer]
                [:##m :!S8 :num-layer]
                [:##comma :##1 :num-layer]
                [:##period :##2 :num-layer]
                [:##slash :##3 :num-layer]
                [:##right_shift :##period :num-layer]
            ]
        }
        {
            :des "kb layer"
            :rules [
                [:i :!SOf5 :kb-layer]
                [:o :!SOf8 :kb-layer]
                [:p :!Of8 :kb-layer]
                [:open_bracket :!Of5 :kb-layer]
                ;; middle row
                [:j :f11 :kb-layer]
                [:k :f12 :kb-layer]
                [:l :!CSy :kb-layer]
                [:semicolon :!TSspacebar :kb-layer]
                [:quote :!Tdown_arrow :kb-layer]
                ;; bottom row
                [:x :!CS4 :kb-layer]
                [:c :!CST4 :kb-layer]
                [:v :!CS3 :kb-layer]
                [:b :!CST3 :kb-layer]
                [:comma :!Cf2 :kb-layer]
                [:period :pause :kb-layer]
                [:slash :scroll_lock :kb-layer]
                [:right_shift :!Tup_arrow :kb-layer]
            ]
        }
        {
            :des "function layer"
            :rules [
                [:w :!Tup_arrow :fnc-layer]
                [:e :!Tdown_arrow :fnc-layer]
                [:r :!Cgrave_accent_and_tilde :fnc-layer]
                [:u :f10 :fnc-layer]
                [:i :f7 :fnc-layer]
                [:o :f8 :fnc-layer]
                [:p :f9 :fnc-layer]
                ;; middle row
                [:s :!Tf8 :fnc-layer]
                [:d :!Tf2 :fnc-layer]
                [:f :!Tf3 :fnc-layer]
                [:j :f11 :fnc-layer]
                [:k :f4 :fnc-layer]
                [:l :f5 :fnc-layer]
                [:semicolon :f6 :fnc-layer]
                ;; bottom row
                [:c :!Tf5 :fnc-layer]
                [:v :!Tf4 :fnc-layer]
                [:m :f12 :fnc-layer]
                [:comma :f1 :fnc-layer]
                [:period :f2 :fnc-layer]
                [:slash :f3 :fnc-layer]
            ]
        }
        {
            :des "vanilla colemak"
            :rules [
                [:##e :##f]
                [:##r :##p]
                [:##t :##g]
                [:##u :##j]
                [:##i :##l]
                [:##o :##u]
                [:##p :##y]
                [:##open_bracket :##semicolon]
                ;; middle row
                [:##s :##r]
                [:##d :##s]
                [:##f :##t]
                [:##g :##d]
                [:##j :##h]
                [:##k :##n]
                [:##l :##e]
                [:##semicolon :##i]
                [:##quote :##o]
                ;; bottom row
                [:##m :##k]
                [:##comma :##m]
                [:##period :##comma]
                [:##slash :##period]
                [:##right_shift :##left_control nil {:held :##left_control :alone :##slash}]
                ;; others
                [:##left_command :##left_option nil {:held :##left_option :alone :##hyphen}]
                ;;[:##left_option :##left_option nil {:held :##left_option :alone :##hyphen}]
                [:##spacebar :##left_command nil {:held :##left_command :alone :##quote}]
                [:##right_command :##spacebar]
                [:##right_option :##left_shift]
                ;; when there's a sticky option in goku, do something like this
                ;; [:##left_shift :##left_shift :sticky]
                ;; [:##right_option :##left_shift :sticky]
            ]
        }
    ]
}

;; In ~/.config/karabiner/karabiner.json (the output of this file)

;; At the start of manipulators, replace all combos like so (if you've changed some combos then you'll have to manually edit):
;; "manipulators": [
;;                             {
;;                                 "from": {
;;                                     "modifiers": {
;;                                         "optional": [
;;                                             "left_command",
;;                                             "left_control",
;;                                             "left_option"
;;                                         ]
;;                                     },
;;                                     "simultaneous": [
;;                                         {
;;                                             "key_code": "o"
;;                                         },
;;                                         {
;;                                             "key_code": "p"
;;                                         }
;;                                     ],
;;                                     "simultaneous_options": {
;;                                         "detect_key_down_uninterruptedly": false,
;;                                         "key_down_order": "insensitive",
;;                                         "key_up_order": "insensitive",
;;                                         "key_up_when": "any"
;;                                     }
;;                                 },
;;                                 "to": [
;;                                     {
;;                                         "key_code": "delete_or_backspace"
;;                                     }
;;                                 ],
;;                                 "type": "basic"
;;                             },
;;                             {
;;                                 "from": {
;;                                     "modifiers": {
;;                                         "mandatory": [
;;                                             "left_shift"
;;                                         ],
;;                                         "optional": [
;;                                             "left_command",
;;                                             "left_control",
;;                                             "left_option"
;;                                         ]
;;                                     },
;;                                     "simultaneous": [
;;                                         {
;;                                             "key_code": "o"
;;                                         },
;;                                         {
;;                                             "key_code": "p"
;;                                         }
;;                                     ],
;;                                     "simultaneous_options": {
;;                                         "detect_key_down_uninterruptedly": false,
;;                                         "key_down_order": "insensitive",
;;                                         "key_up_order": "insensitive",
;;                                         "key_up_when": "any"
;;                                     }
;;                                 },
;;                                 "to": [
;;                                     {
;;                                         "key_code": "delete_forward"
;;                                     }
;;                                 ],
;;                                 "type": "basic"
;;                             },
;;                             {
;;                                 "from": {
;;                                     "modifiers": {
;;                                         "optional": [
;;                                             "any"
;;                                         ]
;;                                     },
;;                                     "simultaneous": [
;;                                         {
;;                                             "key_code": "comma"
;;                                         },
;;                                         {
;;                                             "key_code": "period"
;;                                         }
;;                                     ],
;;                                     "simultaneous_options": {
;;                                         "detect_key_down_uninterruptedly": false,
;;                                         "key_down_order": "insensitive",
;;                                         "key_up_order": "insensitive",
;;                                         "key_up_when": "any"
;;                                     }
;;                                 },
;;                                 "to": [
;;                                     {
;;                                         "key_code": "tab"
;;                                     }
;;                                 ],
;;                                 "type": "basic"
;;                             },
;;                             {
;;                                 "from": {
;;                                     "modifiers": {
;;                                         "optional": [
;;                                             "any"
;;                                         ]
;;                                     },
;;                                     "simultaneous": [
;;                                         {
;;                                             "key_code": "comma"
;;                                         },
;;                                         {
;;                                             "key_code": "right_shift"
;;                                         }
;;                                     ],
;;                                     "simultaneous_options": {
;;                                         "detect_key_down_uninterruptedly": false,
;;                                         "key_down_order": "insensitive",
;;                                         "key_up_order": "insensitive",
;;                                         "key_up_when": "any"
;;                                     }
;;                                 },
;;                                 "to": [
;;                                     {
;;                                         "key_code": "escape"
;;                                     }
;;                                 ],
;;                                 "type": "basic"
;;                             },
;;                             {
;;                                 "from": {
;;                                     "modifiers": {
;;                                         "optional": [
;;                                             "any"
;;                                         ]
;;                                     },
;;                                     "simultaneous": [
;;                                         {
;;                                             "key_code": "period"
;;                                         },
;;                                         {
;;                                             "key_code": "slash"
;;                                         }
;;                                     ],
;;                                     "simultaneous_options": {
;;                                         "detect_key_down_uninterruptedly": false,
;;                                         "key_down_order": "insensitive",
;;                                         "key_up_order": "insensitive",
;;                                         "key_up_when": "any"
;;                                     }
;;                                 },
;;                                 "to": [
;;                                     {
;;                                         "key_code": "return_or_enter"
;;                                     }
;;                                 ],
;;                                 "type": "basic"
;;                             },
;;                             {
;;                                 "from": {
;;                                     "modifiers": {
;;                                         "optional": [
;;                                             "any"
;;                                         ]
;;                                     },
;;                                     "simultaneous": [
;;                                         {
;;                                             "key_code": "c"
;;                                         },
;;                                         {
;;                                             "key_code": "v"
;;                                         }
;;                                     ],
;;                                     "simultaneous_options": {
;;                                         "detect_key_down_uninterruptedly": false,
;;                                         "key_down_order": "insensitive",
;;                                         "key_up_order": "insensitive",
;;                                         "key_up_when": "any"
;;                                     }
;;                                 },
;;                                 "to": [
;;                                     {
;;                                         "key_code": "grave_accent_and_tilde"
;;                                     }
;;                                 ],
;;                                 "type": "basic"
;;                             },
;;                             {
;;                                 "from": {
;;                                     "modifiers": {
;;                                         "optional": [
;;                                             "any"
;;                                         ]
;;                                     },
;;                                     "simultaneous": [
;;                                         {
;;                                             "key_code": "v"
;;                                         },
;;                                         {
;;                                             "key_code": "comma"
;;                                         }
;;                                     ],
;;                                     "simultaneous_options": {
;;                                         "detect_key_down_uninterruptedly": false,
;;                                         "key_down_order": "insensitive",
;;                                         "key_up_order": "insensitive",
;;                                         "key_up_when": "any"
;;                                     }
;;                                 },
;;                                 "to": [
;;                                     {
;;                                         "key_code": "caps_lock"
;;                                     }
;;                                 ],
;;                                 "type": "basic"
;;                             }
;;                         ]

;; Also add this to where you find the left shifts, for one shot shift (when in a layer, just the first instance of "key_code" : "left_shift", not the second):
;; "to" : [ {
;;             "sticky_modifier" : {
;;               "left_shift" : "toggle"
;;             }
;;           }, {
;;             "key_code" : "left_shift"
;;           } ],

;; Also add this in since can't via Goku:
;; "from" : {
;;             "key_code" : "s"
;;           },
;;           "to" : [ {
;;             "consumer_key_code" : "scan_previous_track"
;;           } ],
;;           "conditions" : [ {
;;             "name" : "nav-layer",
;;             "value" : 1,
;;             "type" : "variable_if"
;;           } ],
;;           "type" : "basic"
;;         }, {
;;           "type" : "basic",
;;           "parameters" : {
;;             "basic.simultaneous_threshold_milliseconds" : 350
;;           },
;;           "to" : [ {
;;             "set_variable" : {
;;               "name" : "nav-layer",
;;               "value" : 1
;;             }
;;           }, {
;;             "consumer_key_code" : "scan_previous_track"
;;           } ],
;;           "from" : {
;;             "simultaneous" : [ {
;;               "key_code" : "q"
;;             }, {
;;               "key_code" : "s"
;;             } ],
;;             "simultaneous_options" : {
;;               "detect_key_down_uninterruptedly" : true,
;;               "key_down_order" : "strict",
;;               "key_up_order" : "strict_inverse",
;;               "key_up_when" : "any",
;;               "to_after_key_up" : [ {
;;                 "set_variable" : {
;;                   "name" : "nav-layer",
;;                   "value" : 0
;;                 }
;;               } ]
;;             }
;;           }
;;         }, {

;; "from" : {
;;             "key_code" : "g"
;;           },
;;           "to" : [ {
;;             "consumer_key_code" : "scan_next_track"
;;           } ],
;;           "conditions" : [ {
;;             "name" : "nav-layer",
;;             "value" : 1,
;;             "type" : "variable_if"
;;           } ],
;;           "type" : "basic"
;;         }, {
;;           "type" : "basic",
;;           "parameters" : {
;;             "basic.simultaneous_threshold_milliseconds" : 350
;;           },
;;           "to" : [ {
;;             "set_variable" : {
;;               "name" : "nav-layer",
;;               "value" : 1
;;             }
;;           }, {
;;             "consumer_key_code" : "scan_next_track"
;;           } ],
;;           "from" : {
;;             "simultaneous" : [ {
;;               "key_code" : "q"
;;             }, {
;;               "key_code" : "g"
;;             } ],
;;             "simultaneous_options" : {
;;               "detect_key_down_uninterruptedly" : true,
;;               "key_down_order" : "strict",
;;               "key_up_order" : "strict_inverse",
;;               "key_up_when" : "any",
;;               "to_after_key_up" : [ {
;;                 "set_variable" : {
;;                   "name" : "nav-layer",
;;                   "value" : 0
;;                 }
;;               } ]
;;             }
;;           }
;;         }, {
